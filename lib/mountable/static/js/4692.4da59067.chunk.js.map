{"version":3,"file":"static/js/4692.4da59067.chunk.js","mappings":"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","sources":["../../../streamlit/frontend/src/components/shared/ProgressBar/ProgressBar.tsx","../../../streamlit/frontend/src/components/widgets/FileUploader/UploadFileInfo.ts","../../../streamlit/frontend/src/lib/FileHelper.ts","../../../streamlit/frontend/src/components/widgets/FileUploader/styled-components.ts","../../../streamlit/frontend/src/components/widgets/FileUploader/FileDropzoneInstructions.tsx","../../../streamlit/frontend/src/components/widgets/FileUploader/FileDropzone.tsx","../../../streamlit/frontend/src/hocs/withPagination/styled-components.ts","../../../streamlit/frontend/src/hocs/withPagination/Pagination.tsx","../../../streamlit/frontend/src/hocs/withPagination/withPagination.tsx","../../../streamlit/frontend/src/components/widgets/FileUploader/UploadedFile.tsx","../../../streamlit/frontend/src/components/widgets/FileUploader/UploadedFiles.tsx","../../../streamlit/frontend/src/components/widgets/FileUploader/FileUploader.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport { AppContext } from \"src/components/core/AppContext\"\nimport { Theme, isPresetTheme } from \"src/theme\"\nimport {\n  ProgressBar as UIProgressBar,\n  ProgressBarOverrides,\n} from \"baseui/progress-bar\"\nimport { mergeOverrides } from \"baseui\"\nimport { Overrides } from \"baseui/overrides\"\n\nexport enum Size {\n  EXTRASMALL = \"xs\",\n  SMALL = \"sm\",\n  MEDIUM = \"md\",\n  LARGE = \"lg\",\n  EXTRALARGE = \"xl\",\n}\n\nexport interface ProgressBarProps {\n  width?: number\n  value: number\n  overrides?: Overrides<any>\n  size?: Size\n}\n\nfunction ProgressBar({\n  value,\n  width,\n  size = Size.SMALL,\n  overrides,\n}: ProgressBarProps): ReactElement {\n  const theme: Theme = useTheme()\n  const heightMap = {\n    xs: theme.spacing.twoXS,\n    sm: theme.spacing.sm,\n    md: theme.spacing.lg,\n    lg: theme.spacing.xl,\n    xl: theme.spacing.twoXL,\n  }\n  const { activeTheme } = React.useContext(AppContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const defaultOverrides: Overrides<ProgressBarOverrides> = {\n    BarContainer: {\n      style: {\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n      },\n    },\n    Bar: {\n      style: ({ $theme }: { $theme: any }) => ({\n        width: width ? width.toString() : undefined,\n        marginTop: theme.spacing.none,\n        marginBottom: theme.spacing.none,\n        marginRight: theme.spacing.none,\n        marginLeft: theme.spacing.none,\n        height: heightMap[size],\n        backgroundColor: $theme.colors.progressbarTrackFill,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n    BarProgress: {\n      style: () => ({\n        backgroundColor: usingCustomTheme\n          ? theme.colors.primary\n          : theme.colors.blue70,\n        borderTopLeftRadius: theme.spacing.twoXS,\n        borderTopRightRadius: theme.spacing.twoXS,\n        borderBottomLeftRadius: theme.spacing.twoXS,\n        borderBottomRightRadius: theme.spacing.twoXS,\n      }),\n    },\n  }\n\n  return (\n    <UIProgressBar\n      value={value}\n      overrides={mergeOverrides(defaultOverrides, overrides)}\n    />\n  )\n}\n\nexport default ProgressBar\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CancelTokenSource } from \"axios\"\n\nexport interface UploadingStatus {\n  type: \"uploading\"\n  cancelToken: CancelTokenSource\n  progress: number\n}\n\nexport interface UploadedStatus {\n  type: \"uploaded\"\n\n  /** ID generated by the server. */\n  serverFileId: number\n}\n\nexport interface ErrorStatus {\n  type: \"error\"\n  errorMessage: string\n}\n\n/** The various statuses that an UploadedFileInfo can have. */\nexport type FileStatus = UploadingStatus | UploadedStatus | ErrorStatus\n\n/**\n * Wraps a File object with additional data used by FileUploader.\n * This class is immutable because it's used in within FileUploader.state.\n */\nexport class UploadFileInfo {\n  public readonly name: string\n\n  public readonly size: number\n\n  public readonly status: FileStatus\n\n  /**\n   * ID used to refer to the file locally, for update operations.\n   * If the file is uploaded, it will also have a serverID, which is\n   * used to refer to the file on the server.\n   */\n  public readonly id: number\n\n  /**\n   * Create a clone of this UploadFileInfo with the given status.\n   */\n  public setStatus(status: FileStatus): UploadFileInfo {\n    return new UploadFileInfo(this.name, this.size, this.id, status)\n  }\n\n  public constructor(\n    name: string,\n    size: number,\n    id: number,\n    status: FileStatus\n  ) {\n    this.name = name\n    this.size = size\n    this.id = id\n    this.status = status\n  }\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isFromWindows } from \"src/lib/utils\"\n\nexport enum FileSize {\n  Gigabyte = \"gb\",\n  Megabyte = \"mb\",\n  Kilobyte = \"kb\",\n  Byte = \"b\",\n}\n\n// There is a shift towards displaying storage in base 10 vs base 2\n// but Windows is still displaying things in base 2. This does not handle\n// all cases but for simplicity general rule is to use base 2 for Windows.\nexport const BYTE_CONVERSION_SIZE = isFromWindows() ? 1024 : 1000\nconst sizeUnitSequence = [\n  FileSize.Gigabyte,\n  FileSize.Megabyte,\n  FileSize.Kilobyte,\n  FileSize.Byte,\n]\n\nexport const getSizeDisplay = (\n  size: number,\n  unit: FileSize,\n  rounding = 1\n): string => {\n  if (!unit) {\n    unit = FileSize.Byte\n  }\n\n  if (rounding < 0) {\n    rounding = 0\n  }\n\n  if (size < 0) {\n    throw new Error(\"Size must be greater than or equal to 0\")\n  }\n\n  const sizeIndex = sizeUnitSequence.indexOf(unit)\n  const nextUnitSize = size / BYTE_CONVERSION_SIZE\n  if (sizeIndex && size > BYTE_CONVERSION_SIZE / 2) {\n    return getSizeDisplay(\n      nextUnitSize,\n      sizeUnitSequence[sizeIndex - 1],\n      rounding\n    )\n  }\n  return `${size.toFixed(rounding)}${unit.toUpperCase()}`\n}\n\nexport const sizeConverter = (\n  size: number,\n  inputUnit: FileSize,\n  outputUnit: FileSize\n): number => {\n  if (size < 0) {\n    throw Error(\"Size must be 0 or greater\")\n  }\n\n  const inputLevel = sizeUnitSequence.findIndex(unit => unit === inputUnit)\n  const outputLevel = sizeUnitSequence.findIndex(unit => unit === outputUnit)\n\n  if (inputLevel === -1 || outputLevel === -1) {\n    // Should not ever occur\n    throw Error(\"Unexpected byte unit provided\")\n  }\n\n  if (inputLevel === outputLevel) {\n    return size\n  }\n\n  const levelsBetween = Math.abs(inputLevel - outputLevel)\n  const byteDifference = BYTE_CONVERSION_SIZE ** levelsBetween\n\n  if (inputLevel > outputLevel) {\n    // Going from smaller to bigger\n    return size / byteDifference\n  }\n  // Going from bigger to smaller\n  return size * byteDifference\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled, { CSSObject } from \"@emotion/styled\"\nimport { Theme } from \"src/theme\"\n\nexport interface StyledFileDropzone {\n  isDisabled: boolean\n}\n\nexport const StyledFileDropzoneSection = styled.section<StyledFileDropzone>(\n  ({ isDisabled, theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing.lg,\n    backgroundColor: theme.colors.secondaryBg,\n    borderRadius: theme.radii.md,\n    \":focus\": {\n      outline: \"none\",\n      boxShadow: `0 0 0 1px ${theme.colors.primary}`,\n    },\n    color: isDisabled ? theme.colors.gray : theme.colors.bodyText,\n  })\n)\n\nexport const StyledFileDropzoneInstructions = styled.div(() => ({\n  marginRight: \"auto\",\n  alignItems: \"center\",\n  display: \"flex\",\n}))\n\nexport const StyledFileDropzoneInstructionsFileUploaderIcon = styled.span(\n  ({ theme }) => ({\n    color: theme.colors.darkenedBgMix100,\n    marginRight: theme.spacing.lg,\n  })\n)\n\nexport const StyledFileDropzoneInstructionsStyledSpan = styled.span(\n  ({ theme }) => ({\n    marginBottom: theme.spacing.twoXS,\n  })\n)\n\nexport const StyledFileDropzoneInstructionsColumn = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nexport const StyledUploadedFiles = styled.div(({ theme }) => ({\n  left: 0,\n  right: 0,\n  lineHeight: theme.lineHeights.tight,\n  paddingTop: theme.spacing.md,\n  paddingLeft: theme.spacing.lg,\n  paddingRight: theme.spacing.lg,\n}))\n\nexport const StyledUploadedFilesList = styled.ul(() => ({\n  listStyleType: \"none\",\n  marginBottom: 0,\n}))\n\nexport const StyledUploadedFilesListItem = styled.li(({ theme }) => ({\n  margin: theme.spacing.none,\n  padding: theme.spacing.none,\n}))\n\nexport const StyledUploadedFileData = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"baseline\",\n  flex: 1,\n  paddingLeft: theme.spacing.lg,\n  overflow: \"hidden\",\n}))\n\nexport const StyledUploadedFileName = styled.div(({ theme }) => ({\n  marginRight: theme.spacing.sm,\n  marginBottom: theme.spacing.twoXS,\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\",\n}))\n\nexport const StyledUploadedFile = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  marginBottom: theme.spacing.twoXS,\n}))\n\nexport const StyledErrorMessage = styled.span(({ theme }) => ({\n  marginRight: theme.spacing.twoXS,\n}))\n\nexport const StyledFileIcon = styled.div(({ theme }) => ({\n  display: \"flex\",\n  padding: theme.spacing.twoXS,\n  color: theme.colors.darkenedBgMix100,\n}))\n\nexport const StyledFileError = styled.small(({ theme }) => ({\n  color: theme.colors.danger,\n  fontSize: theme.fontSizes.sm,\n  height: theme.fontSizes.sm,\n  lineHeight: theme.fontSizes.sm,\n  display: \"flex\",\n  alignItems: \"center\",\n  whiteSpace: \"nowrap\",\n}))\n\nexport const StyledFileErrorIcon = styled.span({})\n\nconst compactFileUploader = (theme: Theme): CSSObject => ({\n  [StyledFileDropzoneSection as any]: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n  [StyledFileDropzoneInstructions as any]: {\n    marginBottom: theme.spacing.lg,\n  },\n  [StyledFileDropzoneInstructionsFileUploaderIcon as any]: {\n    display: \"none\",\n  },\n  [StyledUploadedFiles as any]: {\n    paddingRight: theme.spacing.lg,\n  },\n  [StyledUploadedFile as any]: {\n    maxWidth: \"inherit\",\n    flex: 1,\n    alignItems: \"flex-start\",\n    marginBottom: theme.spacing.sm,\n  },\n  [StyledUploadedFileName as any]: {\n    width: theme.sizes.full,\n  },\n  [StyledUploadedFileData as any]: {\n    flexDirection: \"column\",\n  },\n  [StyledFileError as any]: {\n    height: \"auto\",\n    whiteSpace: \"initial\",\n  },\n  [StyledFileErrorIcon as any]: {\n    display: \"none\",\n  },\n  [StyledUploadedFilesListItem as any]: {\n    margin: theme.spacing.none,\n    padding: theme.spacing.none,\n  },\n})\n\nexport const StyledFileUploader = styled.div(({ theme }) => {\n  if (theme.inSidebar) {\n    return compactFileUploader(theme)\n  }\n\n  return {\n    [`@media (max-width: ${theme.breakpoints.sm})`]:\n      compactFileUploader(theme),\n  }\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport { CloudUpload } from \"@emotion-icons/material-outlined\"\nimport Icon from \"src/components/shared/Icon\"\nimport { FileSize, getSizeDisplay } from \"src/lib/FileHelper\"\nimport { Small } from \"src/components/shared/TextElements\"\n\nimport {\n  StyledFileDropzoneInstructions,\n  StyledFileDropzoneInstructionsFileUploaderIcon,\n  StyledFileDropzoneInstructionsStyledSpan,\n  StyledFileDropzoneInstructionsColumn,\n} from \"./styled-components\"\n\nexport interface Props {\n  multiple: boolean\n  acceptedExtensions: string[]\n  maxSizeBytes: number\n}\n\nconst FileDropzoneInstructions = ({\n  multiple,\n  acceptedExtensions,\n  maxSizeBytes,\n}: Props): React.ReactElement => (\n  <StyledFileDropzoneInstructions>\n    <StyledFileDropzoneInstructionsFileUploaderIcon>\n      <Icon content={CloudUpload} size=\"threeXL\" />\n    </StyledFileDropzoneInstructionsFileUploaderIcon>\n    <StyledFileDropzoneInstructionsColumn>\n      <StyledFileDropzoneInstructionsStyledSpan>\n        Drag and drop file{multiple ? \"s\" : \"\"} here\n      </StyledFileDropzoneInstructionsStyledSpan>\n      <Small>\n        {`Limit ${getSizeDisplay(maxSizeBytes, FileSize.Byte, 0)} per file`}\n        {acceptedExtensions.length\n          ? ` • ${acceptedExtensions\n              .join(\", \")\n              .replace(/\\./g, \"\")\n              .toUpperCase()}`\n          : null}\n      </Small>\n    </StyledFileDropzoneInstructionsColumn>\n  </StyledFileDropzoneInstructions>\n)\n\nexport default FileDropzoneInstructions\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport Dropzone, { FileRejection } from \"react-dropzone\"\nimport Button, { Kind, Size } from \"src/components/shared/Button\"\n\nimport { StyledFileDropzoneSection } from \"./styled-components\"\nimport FileDropzoneInstructions from \"./FileDropzoneInstructions\"\n\nexport interface Props {\n  disabled: boolean\n  onDrop: (acceptedFiles: File[], rejectedFiles: FileRejection[]) => void\n  multiple: boolean\n  acceptedExtensions: string[]\n  maxSizeBytes: number\n  label: string\n}\n\nconst FileDropzone = ({\n  onDrop,\n  multiple,\n  acceptedExtensions,\n  maxSizeBytes,\n  disabled,\n  label,\n}: Props): React.ReactElement => (\n  <Dropzone\n    onDrop={onDrop}\n    multiple={multiple}\n    accept={acceptedExtensions.length ? acceptedExtensions : undefined}\n    maxSize={maxSizeBytes}\n    disabled={disabled}\n    // react-dropzone v12+ uses the File System Access API by default,\n    // causing the bug described in https://github.com/streamlit/streamlit/issues/6176.\n    useFsAccessApi={false}\n  >\n    {({ getRootProps, getInputProps }) => (\n      <StyledFileDropzoneSection\n        {...getRootProps()}\n        data-testid=\"stFileUploadDropzone\"\n        isDisabled={disabled}\n        aria-label={label}\n      >\n        <input {...getInputProps()} />\n        <FileDropzoneInstructions\n          multiple={multiple}\n          acceptedExtensions={acceptedExtensions}\n          maxSizeBytes={maxSizeBytes}\n        />\n        <Button kind={Kind.SECONDARY} disabled={disabled} size={Size.SMALL}>\n          Browse files\n        </Button>\n      </StyledFileDropzoneSection>\n    )}\n  </Dropzone>\n)\n\nexport default FileDropzone\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledPagination = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  paddingBottom: theme.spacing.twoXS,\n  marginBottom: theme.spacing.twoXS,\n}))\n\nexport const StyledPaginators = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: theme.colors.fadedText40,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"@emotion-icons/material-outlined\"\nimport Button, { Kind } from \"src/components/shared/Button\"\nimport Icon from \"src/components/shared/Icon\"\nimport { Small } from \"src/components/shared/TextElements\"\nimport { StyledPagination, StyledPaginators } from \"./styled-components\"\n\nexport interface Props {\n  className: string\n  currentPage: number\n  totalPages: number\n  pageSize: number\n  onNext: (event: React.SyntheticEvent<HTMLElement>) => void\n  onPrevious: (event: React.SyntheticEvent<HTMLElement>) => void\n}\n\nconst Pagination = ({\n  className,\n  currentPage,\n  totalPages,\n  onNext,\n  onPrevious,\n}: Props): React.ReactElement => {\n  return (\n    <StyledPagination className={className}>\n      <Small>{`Showing page ${currentPage} of ${totalPages}`}</Small>\n      <StyledPaginators>\n        <Button onClick={onPrevious} kind={Kind.MINIMAL}>\n          <Icon content={ChevronLeft} size=\"xl\" />\n        </Button>\n        <Button onClick={onNext} kind={Kind.MINIMAL}>\n          <Icon content={ChevronRight} size=\"xl\" />\n        </Button>\n      </StyledPaginators>\n    </StyledPagination>\n  )\n}\n\nexport default Pagination\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentType, ReactElement, useEffect, useState } from \"react\"\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\nimport Pagination from \"src/hocs/withPagination/Pagination\"\nimport { usePrevious } from \"src/lib/Hooks\"\n\nexport interface Props {\n  items: any[]\n  pageSize: number\n  resetOnAdd: boolean\n}\n\nconst calculateNumPages = (items: any[], pageSize: number): number =>\n  Math.ceil(items.length / pageSize)\n\nconst withPagination = (\n  WrappedComponent: ComponentType<any>\n): ComponentType<any> => {\n  const WithPagination = ({\n    pageSize,\n    items,\n    resetOnAdd,\n    ...props\n  }: Props): ReactElement => {\n    const [currentPage, updateCurrentPage] = useState<number>(0)\n    const [totalPages, updateTotalPages] = useState<number>(\n      calculateNumPages(items, pageSize)\n    )\n\n    const prevItems: any[] = usePrevious(items)\n\n    useEffect(() => {\n      if (prevItems && prevItems.length !== items.length) {\n        updateTotalPages(calculateNumPages(items, pageSize))\n      }\n      if (prevItems && prevItems.length < items.length) {\n        if (resetOnAdd) {\n          updateCurrentPage(0)\n        }\n      } else if (currentPage + 1 >= totalPages) {\n        updateCurrentPage(totalPages - 1)\n      }\n    }, [items, currentPage, pageSize, prevItems, resetOnAdd, totalPages])\n\n    const onNext = (): void => {\n      updateCurrentPage(Math.min(currentPage + 1, totalPages - 1))\n    }\n\n    const onPrevious = (): void => {\n      updateCurrentPage(Math.max(0, currentPage - 1))\n    }\n\n    const paginatedItems = items.slice(\n      currentPage * pageSize,\n      currentPage * pageSize + pageSize\n    )\n    return (\n      <>\n        <WrappedComponent items={paginatedItems} {...props} />\n        {items.length > pageSize ? (\n          <Pagination\n            className=\"streamlit-paginator\"\n            pageSize={pageSize}\n            totalPages={totalPages}\n            currentPage={currentPage + 1}\n            onNext={onNext}\n            onPrevious={onPrevious}\n          />\n        ) : null}\n      </>\n    )\n  }\n  return hoistNonReactStatics(WithPagination, WrappedComponent)\n}\n\nexport default withPagination\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport {\n  Clear,\n  Error,\n  InsertDriveFile,\n} from \"@emotion-icons/material-outlined\"\nimport Button, { Kind } from \"src/components/shared/Button\"\nimport Icon from \"src/components/shared/Icon\"\nimport ProgressBar, { Size } from \"src/components/shared/ProgressBar\"\nimport { Small } from \"src/components/shared/TextElements\"\nimport { FileSize, getSizeDisplay } from \"src/lib/FileHelper\"\nimport {\n  StyledUploadedFile,\n  StyledFileErrorIcon,\n  StyledErrorMessage,\n  StyledFileError,\n  StyledFileIcon,\n  StyledUploadedFileData,\n  StyledUploadedFileName,\n} from \"./styled-components\"\nimport { UploadFileInfo } from \"./UploadFileInfo\"\n\nexport interface Props {\n  fileInfo: UploadFileInfo\n  onDelete: (id: number) => void\n}\n\nexport interface UploadedFileStatusProps {\n  fileInfo: UploadFileInfo\n}\n\nexport const UploadedFileStatus = ({\n  fileInfo,\n}: UploadedFileStatusProps): React.ReactElement | null => {\n  if (fileInfo.status.type === \"uploading\") {\n    return (\n      <ProgressBar\n        value={fileInfo.status.progress}\n        size={Size.SMALL}\n        overrides={{\n          Bar: {\n            style: {\n              marginLeft: 0,\n              marginTop: \"4px\",\n            },\n          },\n        }}\n      />\n    )\n  }\n\n  if (fileInfo.status.type === \"error\") {\n    return (\n      <StyledFileError>\n        <StyledErrorMessage data-testid=\"stUploadedFileErrorMessage\">\n          {fileInfo.status.errorMessage}\n        </StyledErrorMessage>\n        <StyledFileErrorIcon>\n          <Icon content={Error} size=\"lg\" />\n        </StyledFileErrorIcon>\n      </StyledFileError>\n    )\n  }\n\n  if (fileInfo.status.type === \"uploaded\") {\n    return <Small>{getSizeDisplay(fileInfo.size, FileSize.Byte)}</Small>\n  }\n\n  return null\n}\n\nconst UploadedFile = ({ fileInfo, onDelete }: Props): React.ReactElement => {\n  return (\n    <StyledUploadedFile className=\"uploadedFile\">\n      <StyledFileIcon>\n        <Icon content={InsertDriveFile} size=\"twoXL\" />\n      </StyledFileIcon>\n      <StyledUploadedFileData className=\"uploadedFileData\">\n        <StyledUploadedFileName\n          className=\"uploadedFileName\"\n          title={fileInfo.name}\n        >\n          {fileInfo.name}\n        </StyledUploadedFileName>\n        <UploadedFileStatus fileInfo={fileInfo} />\n      </StyledUploadedFileData>\n      <div data-testid=\"fileDeleteBtn\">\n        <Button onClick={() => onDelete(fileInfo.id)} kind={Kind.MINIMAL}>\n          <Icon content={Clear} size=\"lg\" />\n        </Button>\n      </div>\n    </StyledUploadedFile>\n  )\n}\n\nexport default UploadedFile\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport withPagination, { PaginationProps } from \"src/hocs/withPagination\"\nimport UploadedFile from \"./UploadedFile\"\nimport {\n  StyledUploadedFiles,\n  StyledUploadedFilesList,\n  StyledUploadedFilesListItem,\n} from \"./styled-components\"\nimport { UploadFileInfo } from \"./UploadFileInfo\"\n\nexport interface Props {\n  items: UploadFileInfo[]\n  onDelete: (id: number) => void\n}\n\nconst UploadedFileList = ({ items, onDelete }: Props): ReactElement => {\n  return (\n    <StyledUploadedFilesList>\n      {items.map(file => (\n        <StyledUploadedFilesListItem key={file.id}>\n          <UploadedFile fileInfo={file} onDelete={onDelete} />\n        </StyledUploadedFilesListItem>\n      ))}\n    </StyledUploadedFilesList>\n  )\n}\n\nexport const PaginatedFiles = withPagination(UploadedFileList)\n\nconst UploadedFiles = (props: Props & PaginationProps): ReactElement => (\n  <StyledUploadedFiles>\n    <PaginatedFiles {...props} />\n  </StyledUploadedFiles>\n)\nexport default UploadedFiles\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport axios from \"axios\"\nimport _ from \"lodash\"\nimport React from \"react\"\nimport { FileRejection } from \"react-dropzone\"\n\nimport {\n  FileUploader as FileUploaderProto,\n  FileUploaderState as FileUploaderStateProto,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"src/autogen/proto\"\nimport { FormClearHelper } from \"src/components/widgets/Form\"\n\nimport { FileSize, getSizeDisplay, sizeConverter } from \"src/lib/FileHelper\"\nimport { FileUploadClient } from \"src/lib/FileUploadClient\"\nimport { WidgetStateManager } from \"src/lib/WidgetStateManager\"\nimport {\n  WidgetLabel,\n  StyledWidgetLabelHelp,\n} from \"src/components/widgets/BaseWidget\"\nimport TooltipIcon from \"src/components/shared/TooltipIcon\"\nimport { Placement } from \"src/components/shared/Tooltip\"\nimport { labelVisibilityProtoValueToEnum } from \"src/lib/utils\"\nimport FileDropzone from \"./FileDropzone\"\nimport { StyledFileUploader } from \"./styled-components\"\nimport UploadedFiles from \"./UploadedFiles\"\nimport { UploadFileInfo, UploadedStatus } from \"./UploadFileInfo\"\n\nexport interface Props {\n  disabled: boolean\n  element: FileUploaderProto\n  widgetMgr: WidgetStateManager\n  uploadClient: FileUploadClient\n  width: number\n}\n\ntype FileUploaderStatus =\n  | \"ready\" // FileUploader can upload or delete files\n  | \"updating\" // at least one file is being uploaded or deleted\n\nexport interface State {\n  /**\n   * List of files dropped on the FileUploader by the user. This list includes\n   * rejected files that will not be updated.\n   */\n  files: UploadFileInfo[]\n\n  /**\n   * The most recent file ID we've received from the server. This gets sent\n   * back to the server during widget update so that it clean up\n   * orphaned files. File IDs start at 1 and only ever increase, so a\n   * file with a higher ID is guaranteed to be newer than one with a lower ID.\n   */\n  newestServerFileId: number\n}\n\nclass FileUploader extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  /**\n   * A counter for assigning unique internal IDs to each file tracked\n   * by the uploader. These IDs are used to update file state internally,\n   * and are separate from the serverFileIds that are returned by the server.\n   */\n  private localFileIdCounter = 1\n\n  public constructor(props: Props) {\n    super(props)\n    this.state = this.initialValue\n  }\n\n  get initialValue(): State {\n    const emptyState = { files: [], newestServerFileId: 0 }\n    const { widgetMgr, element } = this.props\n\n    const widgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (widgetValue == null) {\n      return emptyState\n    }\n\n    const { maxFileId, uploadedFileInfo } = widgetValue\n    if (maxFileId == null || maxFileId === 0 || uploadedFileInfo == null) {\n      return emptyState\n    }\n\n    return {\n      files: uploadedFileInfo.map(f => {\n        const name = f.name as string\n        const size = f.size as number\n        const serverFileId = f.id as number\n\n        return new UploadFileInfo(name, size, this.nextLocalFileId(), {\n          type: \"uploaded\",\n          serverFileId,\n        })\n      }),\n      newestServerFileId: Number(maxFileId),\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  /**\n   * Return this.props.element.maxUploadSizeMb, converted to bytes.\n   */\n  private get maxUploadSizeInBytes(): number {\n    const maxMbs = this.props.element.maxUploadSizeMb\n    return sizeConverter(maxMbs, FileSize.Megabyte, FileSize.Byte)\n  }\n\n  /**\n   * Return the FileUploader's current status, which is derived from\n   * its state.\n   */\n  public get status(): FileUploaderStatus {\n    const isFileUpdating = (file: UploadFileInfo): boolean =>\n      file.status.type === \"uploading\"\n\n    // If any of our files is Uploading or Deleting, then we're currently\n    // updating.\n    if (this.state.files.some(isFileUpdating)) {\n      return \"updating\"\n    }\n\n    return \"ready\"\n  }\n\n  public componentDidUpdate = (prevProps: Props): void => {\n    const { element, widgetMgr } = this.props\n\n    // TODO(vdonato): Rework this now that there's a short window where the app\n    // may reconnect to the server without losing its uploaded files. Just\n    // removing the if statement below (to avoid resetting widget state on a\n    // disconnect) seemed to work, but I'm not entirely sure if it's a complete\n    // fix.\n    //\n    // Widgets are disabled if the app is not connected anymore.\n    // If the app disconnects from the server, a new session is created and users\n    // will lose access to the files they uploaded in their previous session.\n    // If we are reconnecting, reset the file uploader so that the widget is\n    // in sync with the new session.\n    if (prevProps.disabled !== this.props.disabled && this.props.disabled) {\n      this.reset()\n      widgetMgr.setFileUploaderStateValue(\n        element,\n        new FileUploaderStateProto(),\n        { fromUi: false }\n      )\n      return\n    }\n\n    // Maybe send a widgetValue update to the widgetStateManager.\n\n    // If our status is not \"ready\", then we have uploads in progress.\n    // We won't submit a new widgetValue until all uploads have resolved.\n    if (this.status !== \"ready\") {\n      return\n    }\n\n    // If we have had no completed uploads, our widgetValue will be\n    // undefined, and we can early-out of the state update.\n    const newWidgetValue = this.createWidgetValue()\n    if (newWidgetValue === undefined) {\n      return\n    }\n\n    const prevWidgetValue = widgetMgr.getFileUploaderStateValue(element)\n    if (!_.isEqual(newWidgetValue, prevWidgetValue)) {\n      widgetMgr.setFileUploaderStateValue(element, newWidgetValue, {\n        fromUi: true,\n      })\n    }\n  }\n\n  /**\n   * When the server receives the widget value, it deletes \"orphaned\" uploaded\n   * files. An orphaned file is any file, associated with this uploader,\n   * whose file ID is not in the file ID list, and whose\n   * ID is <= `newestServerFileId`. This logic ensures that a FileUploader\n   * within a form doesn't have any of its \"unsubmitted\" uploads prematurely\n   * deleted when the script is re-run.\n   */\n  private createWidgetValue(): FileUploaderStateProto | undefined {\n    if (this.state.newestServerFileId === 0) {\n      // If newestServerFileId is 0, we've had no transaction with the server,\n      // and therefore no widget value.\n      return undefined\n    }\n\n    const uploadedFileInfo: UploadedFileInfoProto[] = this.state.files\n      .filter(f => f.status.type === \"uploaded\")\n      .map(f => {\n        const { name, size, status } = f\n        return new UploadedFileInfoProto({\n          id: (status as UploadedStatus).serverFileId,\n          name,\n          size,\n        })\n      })\n\n    return new FileUploaderStateProto({\n      maxFileId: this.state.newestServerFileId,\n      uploadedFileInfo,\n    })\n  }\n\n  /**\n   * Clear files and errors, and reset the widget to its READY state.\n   */\n  private reset = (): void => {\n    this.setState({ files: [] })\n  }\n\n  /**\n   * Called by react-dropzone when files and drag-and-dropped onto the widget.\n   *\n   * @param acceptedFiles an array of files.\n   * @param rejectedFiles an array of FileRejections. A FileRejection\n   * encapsulates a File and an error indicating why it was rejected by\n   * the dropzone widget.\n   */\n  private dropHandler = (\n    acceptedFiles: File[],\n    rejectedFiles: FileRejection[]\n  ): void => {\n    const { element } = this.props\n    const { multipleFiles } = element\n\n    // If this is a single-file uploader and multiple files were dropped,\n    // all the files will be rejected. In this case, we pull out the first\n    // valid file into acceptedFiles, and reject the rest.\n    if (\n      !multipleFiles &&\n      acceptedFiles.length === 0 &&\n      rejectedFiles.length > 1\n    ) {\n      const firstFileIndex = rejectedFiles.findIndex(\n        file =>\n          file.errors.length === 1 && file.errors[0].code === \"too-many-files\"\n      )\n\n      if (firstFileIndex >= 0) {\n        acceptedFiles.push(rejectedFiles[firstFileIndex].file)\n        rejectedFiles.splice(firstFileIndex, 1)\n      }\n    }\n\n    // If this is a single-file uploader that already has a file,\n    // remove that file so that it can be replaced with our new one.\n    if (\n      !multipleFiles &&\n      acceptedFiles.length > 0 &&\n      this.state.files.length > 0\n    ) {\n      this.removeFile(this.state.files[0].id)\n    }\n\n    // Upload each accepted file.\n    acceptedFiles.forEach(this.uploadFile)\n\n    // Create an UploadFileInfo for each of our rejected files, and add them to\n    // our state.\n    if (rejectedFiles.length > 0) {\n      const rejectedInfos = rejectedFiles.map(rejected => {\n        const { file } = rejected\n        return new UploadFileInfo(\n          file.name,\n          file.size,\n          this.nextLocalFileId(),\n          {\n            type: \"error\",\n            errorMessage: this.getErrorMessage(\n              rejected.errors[0].code,\n              rejected.file\n            ),\n          }\n        )\n      })\n      this.addFiles(rejectedInfos)\n    }\n  }\n\n  public uploadFile = (file: File): void => {\n    // Create an UploadFileInfo for this file and add it to our state.\n    const cancelToken = axios.CancelToken.source()\n    const uploadingFileInfo = new UploadFileInfo(\n      file.name,\n      file.size,\n      this.nextLocalFileId(),\n      {\n        type: \"uploading\",\n        cancelToken,\n        progress: 1,\n      }\n    )\n    this.addFile(uploadingFileInfo)\n\n    this.props.uploadClient\n      .uploadFile(\n        this.props.element,\n        file,\n        e => this.onUploadProgress(e, uploadingFileInfo.id),\n        cancelToken.token\n      )\n      .then(newFileId =>\n        this.onUploadComplete(uploadingFileInfo.id, newFileId)\n      )\n      .catch(err => {\n        // If this was a cancel error, we don't show the user an error -\n        // the cancellation was in response to an action they took.\n        if (!axios.isCancel(err)) {\n          this.updateFile(\n            uploadingFileInfo.id,\n            uploadingFileInfo.setStatus({\n              type: \"error\",\n              errorMessage: err ? err.toString() : \"Unknown error\",\n            })\n          )\n        }\n      })\n  }\n\n  /**\n   * Called when an upload has completed. Updates the file's status, and\n   * assigns it the new file ID returned from the server.\n   */\n  private onUploadComplete = (\n    localFileId: number,\n    serverFileId: number\n  ): void => {\n    // \"state.newestServerFileId\" must always hold the max fileID\n    // returned from the server.\n    this.setState(state => ({\n      newestServerFileId: Math.max(state.newestServerFileId, serverFileId),\n    }))\n\n    const curFile = this.getFile(localFileId)\n    if (curFile == null || curFile.status.type !== \"uploading\") {\n      // The file may have been canceled right before the upload\n      // completed. In this case, we just bail.\n      return\n    }\n\n    this.updateFile(\n      curFile.id,\n      curFile.setStatus({ type: \"uploaded\", serverFileId })\n    )\n  }\n\n  /**\n   * Return a human-readable message for the given error.\n   */\n  private getErrorMessage = (errorCode: string, file: File): string => {\n    switch (errorCode) {\n      case \"file-too-large\":\n        return `File must be ${getSizeDisplay(\n          this.maxUploadSizeInBytes,\n          FileSize.Byte\n        )} or smaller.`\n      case \"file-invalid-type\":\n        return `${file.type} files are not allowed.`\n      case \"file-too-small\":\n        // This should not fire.\n        return `File size is too small.`\n      case \"too-many-files\":\n        return \"Only one file is allowed.\"\n      default:\n        return \"Unexpected error. Please try again.\"\n    }\n  }\n\n  /**\n   * Delete the file with the given ID:\n   * - Cancel the file upload if it's in progress\n   * - Remove the fileID from our local state\n   * We don't actually tell the server to delete the file. It will garbage\n   * collect it.\n   */\n  public deleteFile = (fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (file == null) {\n      return\n    }\n\n    if (file.status.type === \"uploading\") {\n      // The file hasn't been uploaded. Let's cancel the request.\n      // However, it may have been received by the server so we'll still\n      // send out a request to delete.\n      file.status.cancelToken.cancel()\n    }\n\n    this.removeFile(fileId)\n  }\n\n  /** Append the given file to `state.files`. */\n  private addFile = (file: UploadFileInfo): void => {\n    this.setState(state => ({ files: [...state.files, file] }))\n  }\n\n  /** Append the given files to `state.files`. */\n  private addFiles = (files: UploadFileInfo[]): void => {\n    this.setState(state => ({ files: [...state.files, ...files] }))\n  }\n\n  /** Remove the file with the given ID from `state.files`. */\n  private removeFile = (idToRemove: number): void => {\n    this.setState(state => ({\n      files: state.files.filter(file => file.id !== idToRemove),\n    }))\n  }\n\n  /**\n   * Return the file with the given ID, if one exists.\n   */\n  private getFile = (fileId: number): UploadFileInfo | undefined => {\n    return this.state.files.find(file => file.id === fileId)\n  }\n\n  /** Replace the file with the given id in `state.files`. */\n  private updateFile = (curFileId: number, newFile: UploadFileInfo): void => {\n    this.setState(curState => {\n      return {\n        files: curState.files.map(file =>\n          file.id === curFileId ? newFile : file\n        ),\n      }\n    })\n  }\n\n  /**\n   * Callback for file upload progress. Updates a single file's local `progress`\n   * state.\n   */\n  private onUploadProgress = (event: ProgressEvent, fileId: number): void => {\n    const file = this.getFile(fileId)\n    if (file == null || file.status.type !== \"uploading\") {\n      return\n    }\n\n    const newProgress = Math.round((event.loaded * 100) / event.total)\n    if (file.status.progress === newProgress) {\n      return\n    }\n\n    // Update file.progress\n    this.updateFile(\n      fileId,\n      file.setStatus({\n        type: \"uploading\",\n        cancelToken: file.status.cancelToken,\n        progress: newProgress,\n      })\n    )\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState({ files: [] }, () => {\n      const newWidgetValue = this.createWidgetValue()\n      if (newWidgetValue == null) {\n        return\n      }\n\n      this.props.widgetMgr.setFileUploaderStateValue(\n        this.props.element,\n        newWidgetValue,\n        { fromUi: true }\n      )\n    })\n  }\n\n  public render(): React.ReactNode {\n    const { files } = this.state\n    const { element, disabled, widgetMgr } = this.props\n    const acceptedExtensions = element.type\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    // We display files in the reverse order they were added.\n    // This way, if you have multiple pages of uploaded files and then drop\n    // another one, you'll see that newest file at the top of the first page.\n    const newestToOldestFiles = files.slice().reverse()\n\n    return (\n      <StyledFileUploader data-testid=\"stFileUploader\">\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <FileDropzone\n          onDrop={this.dropHandler}\n          multiple={element.multipleFiles}\n          acceptedExtensions={acceptedExtensions}\n          maxSizeBytes={this.maxUploadSizeInBytes}\n          label={element.label}\n          disabled={disabled}\n        />\n        {newestToOldestFiles.length > 0 && (\n          <UploadedFiles\n            items={newestToOldestFiles}\n            pageSize={3}\n            onDelete={this.deleteFile}\n            resetOnAdd\n          />\n        )}\n      </StyledFileUploader>\n    )\n  }\n\n  private nextLocalFileId(): number {\n    return this.localFileIdCounter++\n  }\n}\n\nexport default FileUploader\n"],"names":["Size","value","width","size","SMALL","overrides","theme","useTheme","heightMap","xs","spacing","twoXS","sm","md","lg","xl","twoXL","activeTheme","React","AppContext","usingCustomTheme","isPresetTheme","defaultOverrides","BarContainer","style","marginTop","none","marginBottom","marginRight","marginLeft","Bar","$theme","toString","undefined","height","backgroundColor","colors","progressbarTrackFill","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BarProgress","primary","blue70","mergeOverrides","UploadFileInfo","name","id","status","this","FileSize","BYTE_CONVERSION_SIZE","isFromWindows","sizeUnitSequence","Gigabyte","Megabyte","Kilobyte","Byte","getSizeDisplay","unit","rounding","Error","sizeIndex","indexOf","toFixed","toUpperCase","StyledFileDropzoneSection","isDisabled","display","alignItems","padding","secondaryBg","borderRadius","radii","outline","boxShadow","color","gray","bodyText","StyledFileDropzoneInstructions","StyledFileDropzoneInstructionsFileUploaderIcon","darkenedBgMix100","StyledFileDropzoneInstructionsStyledSpan","StyledFileDropzoneInstructionsColumn","StyledUploadedFiles","left","right","lineHeight","lineHeights","tight","paddingTop","paddingLeft","paddingRight","StyledUploadedFilesList","listStyleType","StyledUploadedFilesListItem","margin","StyledUploadedFileData","flex","overflow","StyledUploadedFileName","textOverflow","whiteSpace","StyledUploadedFile","StyledErrorMessage","StyledFileIcon","StyledFileError","danger","fontSize","fontSizes","StyledFileErrorIcon","compactFileUploader","flexDirection","maxWidth","sizes","full","StyledFileUploader","inSidebar","breakpoints","multiple","acceptedExtensions","maxSizeBytes","Icon","content","CloudUpload","length","join","replace","onDrop","disabled","label","accept","maxSize","useFsAccessApi","getRootProps","getInputProps","Button","kind","Kind","StyledPagination","justifyContent","paddingBottom","StyledPaginators","fadedText40","className","currentPage","totalPages","onNext","onPrevious","onClick","ChevronLeft","ChevronRight","calculateNumPages","items","pageSize","Math","ceil","WrappedComponent","hoistNonReactStatics","resetOnAdd","props","useState","updateCurrentPage","updateTotalPages","prevItems","usePrevious","useEffect","paginatedItems","slice","min","max","UploadedFileStatus","fileInfo","type","ProgressBar","progress","errorMessage","onDelete","InsertDriveFile","title","Clear","PaginatedFiles","withPagination","map","file","formClearHelper","FormClearHelper","localFileIdCounter","componentDidUpdate","prevProps","element","widgetMgr","reset","setFileUploaderStateValue","FileUploaderStateProto","fromUi","newWidgetValue","createWidgetValue","prevWidgetValue","getFileUploaderStateValue","_","setState","files","dropHandler","acceptedFiles","rejectedFiles","multipleFiles","firstFileIndex","findIndex","errors","code","push","splice","state","removeFile","forEach","uploadFile","rejectedInfos","rejected","nextLocalFileId","getErrorMessage","addFiles","cancelToken","axios","uploadingFileInfo","addFile","uploadClient","e","onUploadProgress","token","then","newFileId","onUploadComplete","catch","err","updateFile","setStatus","localFileId","serverFileId","newestServerFileId","curFile","getFile","errorCode","maxUploadSizeInBytes","deleteFile","fileId","cancel","idToRemove","filter","find","curFileId","newFile","curState","event","newProgress","round","loaded","total","onFormCleared","initialValue","emptyState","widgetValue","maxFileId","uploadedFileInfo","f","Number","disconnect","inputUnit","outputUnit","inputLevel","outputLevel","levelsBetween","abs","byteDifference","sizeConverter","maxUploadSizeMb","some","UploadedFileInfoProto","manageFormClearListener","formId","newestToOldestFiles","reverse","labelVisibility","labelVisibilityProtoValueToEnum","help","TooltipIcon","placement","Placement"],"sourceRoot":""}